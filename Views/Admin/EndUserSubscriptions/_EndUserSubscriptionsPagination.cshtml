@model EndUserSubscriptionsPaginatedViewModel

@functions {
    public string GetPageUrl(int page)
    {
        var routeValues = new RouteValueDictionary
        {
            ["page"] = page,
            ["pageSize"] = Model.Subscriptions.PageSize
        };

        if (Model.EndUserId.HasValue)
            routeValues["endUserId"] = Model.EndUserId.Value;

        if (!string.IsNullOrWhiteSpace(Model.SearchUserName))
            routeValues["searchUserName"] = Model.SearchUserName;
            
        if (Model.Status.HasValue)
            routeValues["status"] = Model.Status.Value;

        return Url.Action("EndUserSubscriptions", "EndUserSubscriptions", routeValues);
    }
}

<!-- Pagination Controls -->
@if (Model.Subscriptions.TotalPages > 1)
{
    <nav aria-label="Subscriptions pagination" class="mt-4">
        <ul class="pagination justify-content-center">
            <!-- First Page -->
            @if (Model.Subscriptions.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@GetPageUrl(1)">
                        <i class="bi bi-chevron-double-left"></i>
                    </a>
                </li>
            }

            <!-- Previous Page -->
            @if (Model.Subscriptions.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@GetPageUrl(Model.Subscriptions.CurrentPage - 1)">
                        <i class="bi bi-chevron-left"></i>
                    </a>
                </li>
            }

            <!-- Page Numbers -->
            @{
                var startPage = Math.Max(1, Model.Subscriptions.CurrentPage - 2);
                var endPage = Math.Min(Model.Subscriptions.TotalPages, Model.Subscriptions.CurrentPage + 2);
            }

            @if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@GetPageUrl(1)">1</a>
                </li>
                @if (startPage > 2)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
            }

            @for (var pageNumber = startPage; pageNumber <= endPage; pageNumber++)
            {
                <li class="page-item @(pageNumber == Model.Subscriptions.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@GetPageUrl(pageNumber)">
                        @pageNumber
                    </a>
                </li>
            }

            @if (endPage < Model.Subscriptions.TotalPages)
            {
                @if (endPage < Model.Subscriptions.TotalPages - 1)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }

                <li class="page-item">
                    <a class="page-link" href="@GetPageUrl(Model.Subscriptions.TotalPages)">@Model.Subscriptions.TotalPages</a>
                </li>
            }

            <!-- Next Page -->
            @if (Model.Subscriptions.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@GetPageUrl(Model.Subscriptions.CurrentPage + 1)">
                        <i class="bi bi-chevron-right"></i>
                    </a>
                </li>
            }

            <!-- Last Page -->
            @if (Model.Subscriptions.CurrentPage < Model.Subscriptions.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@GetPageUrl(Model.Subscriptions.TotalPages)">
                        <i class="bi bi-chevron-double-right"></i>
                    </a>
                </li>
            }
        </ul>
    </nav>
}