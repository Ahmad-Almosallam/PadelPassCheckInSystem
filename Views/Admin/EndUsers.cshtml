@model List<PadelPassCheckInSystem.Models.Entities.EndUser>
@{
    ViewData["Title"] = "End Users Management";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>End Users Management</h1>
    <div>
        <a href="@Url.Action("PauseHistory")" class="btn btn-outline-info">
            <i class="bi bi-clock-history"></i> View All Pause History
        </a>
        <button type="button" class="btn btn-primary ms-2" data-bs-toggle="modal" data-bs-target="#createModal">
            <i class="bi bi-plus-circle"></i> Add New End User
        </button>
    </div>
</div>

<div class="card">
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Photo</th>
                        <th>Name</th>
                        <th>Phone</th>
                        <th>Email</th>
                        <th>Subscription</th>
                        <th>Status</th>
                        <th>QR Code</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        var today = DateTime.UtcNow.Date;
                        var isActive = user.SubscriptionStartDate <= DateTime.UtcNow && user.SubscriptionEndDate >= DateTime.UtcNow;
                        var isPaused = user.IsPaused && user.CurrentPauseStartDate?.Date <= today && user.CurrentPauseEndDate?.Date >= today;
                        
                        <tr class="@(isPaused ? "table-warning" : "")">
                            <td>
                                @if (!string.IsNullOrEmpty(user.ImageUrl))
                                {
                                    <img src="@user.ImageUrl" alt="@user.Name" class="rounded-circle" style="width: 40px; height: 40px; object-fit: cover;">
                                }
                                else
                                {
                                    <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                        <i class="bi bi-person text-white"></i>
                                    </div>
                                }
                            </td>
                            <td>
                                <strong>@user.Name</strong>
                                @if (isPaused)
                                {
                                    <br><small class="text-warning"><i class="bi bi-pause-circle"></i> Currently Paused</small>
                                }
                            </td>
                            <td>@user.PhoneNumber</td>
                            <td>@user.Email</td>
                            <td>
                                <small>
                                    <strong>Start:</strong> @user.SubscriptionStartDate.ToString("MMM dd, yyyy")<br>
                                    <strong>End:</strong> @user.SubscriptionEndDate.ToString("MMM dd, yyyy")
                                </small>
                                @if (user.IsPaused)
                                {
                                    <br><small class="text-warning">
                                        Paused until @user.CurrentPauseEndDate?.ToString("MMM dd, yyyy")
                                    </small>
                                }
                            </td>
                            <td>
                                @if (isPaused)
                                {
                                    <span class="badge bg-warning">Paused</span>
                                }
                                else if (isActive)
                                {
                                    <span class="badge bg-success">Active</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">Inactive</span>
                                }
                            </td>
                            <td>
                                <button class="btn btn-sm btn-info" onclick="generateQRCode(@user.Id)">
                                    <i class="bi bi-qr-code"></i> Generate
                                </button>
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                                        <i class="bi bi-gear"></i> Actions
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li>
                                            <button class="dropdown-item" onclick="editUser(@user.Id, '@user.Name', '@user.PhoneNumber', '@user.Email', '@user.ImageUrl', '@user.SubscriptionStartDate.ToString("yyyy-MM-dd")', '@user.SubscriptionEndDate.ToString("yyyy-MM-dd")')">
                                                <i class="bi bi-pencil"></i> Edit Details
                                            </button>
                                        </li>
                                        <li><hr class="dropdown-divider"></li>
                                        @if (user.IsPaused)
                                        {
                                            <li>
                                                <form asp-action="UnpauseSubscription" method="post" style="display: inline;" 
                                                      onsubmit="return confirm('Are you sure you want to unpause this subscription?');">
                                                    <input type="hidden" name="endUserId" value="@user.Id" />
                                                    <button type="submit" class="dropdown-item text-success">
                                                        <i class="bi bi-play-circle"></i> Unpause Subscription
                                                    </button>
                                                </form>
                                            </li>
                                        }
                                        else
                                        {
                                            <li>
                                                <a class="dropdown-item text-warning" href="@Url.Action("PauseSubscription", new { endUserId = user.Id })">
                                                    <i class="bi bi-pause-circle"></i> Pause Subscription
                                                </a>
                                            </li>
                                        }
                                        <li>
                                            <a class="dropdown-item" href="@Url.Action("PauseHistory", new { endUserId = user.Id })">
                                                <i class="bi bi-clock-history"></i> View Pause History
                                            </a>
                                        </li>
                                        <li><hr class="dropdown-divider"></li>
                                        <li>
                                            <form asp-action="DeleteEndUser" method="post" style="display: inline;" 
                                                  onsubmit="return confirm('Are you sure you want to delete this user? This action cannot be undone.');">
                                                <input type="hidden" name="id" value="@user.Id" />
                                                <button type="submit" class="dropdown-item text-danger">
                                                    <i class="bi bi-trash"></i> Delete User
                                                </button>
                                            </form>
                                        </li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Statistics Card -->
<div class="row mt-4">
    <div class="col-md-3">
        <div class="card bg-light">
            <div class="card-body text-center">
                <h5 class="card-title">Total Users</h5>
                <h2 class="text-primary">@Model.Count</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-light">
            <div class="card-body text-center">
                <h5 class="card-title">Active Subscriptions</h5>
                <h2 class="text-success">@Model.Count(u => u.SubscriptionStartDate <= DateTime.UtcNow && u.SubscriptionEndDate >= DateTime.UtcNow && !u.IsPaused)</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-light">
            <div class="card-body text-center">
                <h5 class="card-title">Currently Paused</h5>
                <h2 class="text-warning">@Model.Count(u => u.IsPaused && u.CurrentPauseStartDate?.Date <= DateTime.UtcNow.Date && u.CurrentPauseEndDate?.Date >= DateTime.UtcNow.Date)</h2>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-light">
            <div class="card-body text-center">
                <h5 class="card-title">Expired</h5>
                <h2 class="text-danger">@Model.Count(u => u.SubscriptionEndDate < DateTime.UtcNow)</h2>
            </div>
        </div>
    </div>
</div>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="CreateEndUser" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Add New End User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" name="Name" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Phone Number</label>
                        <input type="tel" name="PhoneNumber" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" name="Email" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Image URL</label>
                        <input type="url" name="ImageUrl" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Subscription Start Date</label>
                        <input type="date" name="SubscriptionStartDate" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Subscription End Date</label>
                        <input type="date" name="SubscriptionEndDate" class="form-control" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="UpdateEndUser" method="post">
                <input type="hidden" id="editId" name="id">
                <div class="modal-header">
                    <h5 class="modal-title">Edit End User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" id="editName" name="Name" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Phone Number</label>
                        <input type="tel" id="editPhone" name="PhoneNumber" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" id="editEmail" name="Email" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Image URL</label>
                        <input type="url" id="editImageUrl" name="ImageUrl" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Subscription Start Date</label>
                        <input type="date" id="editStartDate" name="SubscriptionStartDate" class="form-control" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Subscription End Date</label>
                        <input type="date" id="editEndDate" name="SubscriptionEndDate" class="form-control" required>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editUser(id, name, phone, email, imageUrl, startDate, endDate) {
            document.getElementById('editId').value = id;
            document.getElementById('editName').value = name;
            document.getElementById('editPhone').value = phone;
            document.getElementById('editEmail').value = email;
            document.getElementById('editImageUrl').value = imageUrl;
            document.getElementById('editStartDate').value = startDate;
            document.getElementById('editEndDate').value = endDate;
            
            new bootstrap.Modal(document.getElementById('editModal')).show();
        }

        function generateQRCode(userId) {
            fetch(`/Admin/GenerateQRCode?endUserId=${userId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Create temporary input to copy link
                        const input = document.createElement('input');
                        input.value = data.downloadUrl;
                        document.body.appendChild(input);
                        input.select();
                        document.execCommand('copy');
                        document.body.removeChild(input);

                        // Show success message with Bootstrap alert
                        showAlert('success', 'QR code download link has been copied to clipboard.');
                    } else if (data.message === "QR code has already been downloaded.") {
                        if (confirm("This QR code has already been downloaded. Would you like to generate a new one?")) {
                            regenerateQRCode(userId);
                        }
                    } else {
                        showAlert('danger', data.message || 'Failed to generate QR code');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('danger', 'Error generating QR code');
                });
        }

        function regenerateQRCode(userId) {
            fetch(`/Admin/GenerateQRCode?endUserId=${userId}&forceRegenerate=true`)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Create temporary input to copy link
                        const input = document.createElement('input');
                        input.value = data.downloadUrl;
                        document.body.appendChild(input);
                        input.select();
                        document.execCommand('copy');
                        document.body.removeChild(input);

                        showAlert('success', 'New QR code download link has been copied to clipboard.');
                    } else {
                        showAlert('danger', data.message || 'Failed to regenerate QR code');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('danger', 'Error regenerating QR code');
                });
        }

        function showAlert(type, message) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show position-fixed top-0 start-50 translate-middle-x mt-3`;
            alertDiv.style.zIndex = '9999';
            alertDiv.innerHTML = `
                <strong>${type === 'success' ? 'Success!' : 'Error!'}</strong> ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.body.appendChild(alertDiv);

            // Remove alert after 5 seconds
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 5000);
        }
    </script>
}