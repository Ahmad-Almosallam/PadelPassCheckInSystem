@using Microsoft.IdentityModel.Tokens
@model EndUsersPaginatedViewModel

<!-- Search and Filter Form -->
<div class="card mb-4">
    <div class="card-header">
        <h6 class="card-title mb-0">
            <i class="bi bi-funnel"></i> Search & Filter Users
        </h6>
    </div>
    <div class="card-body">
        <form method="get" action="@Url.Action("EndUsers", "EndUser")">
            <div class="row align-items-end">
                <!-- Phone Number Search -->
                <div class="col-md-4">
                    <label for="searchPhoneNumber" class="form-label">
                        <i class="bi bi-telephone"></i> Search by Phone Number
                    </label>
                    <input type="text"
                           id="searchPhoneNumber"
                           name="searchPhoneNumber"
                           class="form-control"
                           value="@Model.SearchPhoneNumber"
                           placeholder="Enter phone number...">
                </div>

                <!-- Status Filter -->
                <div class="col-md-4">
                    <label for="status" class="form-label">
                        <i class="bi bi-filter-circle"></i> Filter by Status
                    </label>
                    <select id="status" name="status" class="form-select" asp-for="Status">
                        <option value="">All Statuses
                        </option>
                        <option value="Active">
                            <i class="bi bi-check-circle text-success"></i> Active (@Model.ActiveSubscriptions)
                        </option>
                        <option value="Paused">
                            <i class="bi bi-pause-circle text-warning"></i> Paused (@Model.CurrentlyPaused)
                        </option>
                        <option value="Stopped">
                            <i class="bi bi-stop-circle text-danger"></i> Stopped (@Model.StoppedCount)
                        </option>
                        <option value="StoppedByWarning">
                            <i class="bi bi-exclamation-triangle text-danger"></i> Stopped by Warning
                            (@Model.StoppedByWarningsCount)
                        </option>
                        <option value="Expired">
                            <i class="bi bi-calendar-x text-muted"></i> Expired (@Model.ExpiredCount)
                        </option>
                        <option value="NotSetPlaytomicUserIds">
                            <i class="bi bi-person-x text-info"></i> No Playtomic ID
                            (@Model.NotSetPlaytomicUserIdsCount)
                        </option>
                        <option value="SyncedRekazUsers">
                            <i class="bi bi-cloud-check text-primary"></i> Synced from Rekaz
                            (@Model.SyncedRekazUsersCount)
                        </option>
                    </select>
                </div>

                <!-- Action Buttons -->
                <div class="col-md-4">
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-search"></i> Search
                        </button>
                        <button type="button" class="btn btn-outline-secondary" onclick="resetSearch()">
                            <i class="bi bi-arrow-clockwise"></i> Reset
                        </button>
                    </div>
                </div>
            </div>

            <!-- Preserve current page size -->
            <input type="hidden" name="pageSize" value="@Model.EndUsers.PageSize">
        </form>

        <!-- Search Results Summary -->
        @if (!string.IsNullOrWhiteSpace(Model.SearchPhoneNumber) || !string.IsNullOrWhiteSpace(Model.Status))
        {
            <div class="mt-3">
                <div class="alert alert-info d-flex align-items-center">
                    <i class="bi bi-info-circle me-2"></i>
                    <div>
                        <strong>Filtered Results:</strong>
                        Showing @Model.EndUsers.TotalItems result@(Model.EndUsers.TotalItems != 1 ? "s" : "")

                        @if (!string.IsNullOrWhiteSpace(Model.SearchPhoneNumber))
                        {
                            <span class="badge bg-secondary ms-2">
                                <i class="bi bi-telephone"></i> Phone: @Model.SearchPhoneNumber
                            </span>
                        }

                        @if (!string.IsNullOrWhiteSpace(Model.Status))
                        {
                            <span class="badge bg-primary ms-2">
                                <i class="bi bi-filter"></i> Status: @Model.Status
                            </span>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>
