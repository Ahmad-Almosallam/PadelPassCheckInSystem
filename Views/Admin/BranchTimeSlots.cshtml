@model List<PadelPassCheckInSystem.Models.ViewModels.PadelPassCheckInSystem.Models.ViewModels.BranchTimeSlotViewModel>
@{
    ViewData["Title"] = ViewBag.BranchId != null ? $"Time Slots - {ViewBag.BranchName}" : "All Branch Time Slots";
    var branches = ViewBag.Branches as List<Branch>;
    var daysOfWeek = ViewBag.DaysOfWeek as List<DayOfWeek>;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>
        @if (ViewBag.BranchId != null)
        {
            <span>Non-Peak Hours - @ViewBag.BranchName</span>
        }
        else
        {
            <span>All Branch Time Slots</span>
        }
    </h1>
    
    <div>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createTimeSlotModal">
            <i class="bi bi-plus-circle"></i> Add Time Slot
        </button>
        @if (ViewBag.BranchId != null)
        {
            <a href="@Url.Action("Branches")" class="btn btn-outline-primary ms-2">
                <i class="bi bi-arrow-left"></i> Back to Branches
            </a>
        }
    </div>
</div>


@if (ViewBag.BranchId == null)
{
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-8">
                    <label class="form-label">Filter by Branch</label>
                    <select name="branchId" class="form-select" onchange="this.form.submit()">
                        <option value="">All Branches</option>
                        @foreach (var branch in branches)
                        {
                            <option value="@branch.Id" selected="@(ViewBag.BranchId == branch.Id ? "selected" : null)">
                                @branch.Name
                            </option>
                        }
                    </select>
                </div>
            </form>
        </div>
    </div>
}

<div class="card">
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="alert alert-info">
                <i class="bi bi-info-circle"></i> 
                <strong>Non-Peak Hours Configuration:</strong> Check-ins are only allowed during the configured time slots below. 
                Time slots can cross midnight (e.g., 22:00 - 04:00).
            </div>

            <!-- Group time slots by day of week -->
            @foreach (var dayGroup in Model.GroupBy(ts => ts.DayOfWeek).OrderBy(g => (int)g.Key))
            {
                <div class="mb-4">
                    <h5 class="text-primary border-bottom pb-2">@dayGroup.Key</h5>
                    <div class="row">
                        @foreach (var timeSlot in dayGroup.OrderBy(ts => ts.StartTime))
                        {
                            <div class="col-md-6 col-lg-4 mb-3">
                                <div class="card border-@(timeSlot.IsActive ? "success" : "secondary")">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <div>
                                                @if (ViewBag.BranchId == null)
                                                {
                                                    <h6 class="card-title">@timeSlot.BranchName</h6>
                                                }
                                                <h5 class="text-success">@timeSlot.TimeRange</h5>
                                                <small class="text-muted">
                                                    Status: 
                                                    @if (timeSlot.IsActive)
                                                    {
                                                        <span class="badge bg-success">Active</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-secondary">Inactive</span>
                                                    }
                                                </small>
                                            </div>
                                            <div class="dropdown">
                                                <button class="btn btn-sm btn-outline-secondary" type="button" data-bs-toggle="dropdown">
                                                    <i class="bi bi-three-dots-vertical"></i>
                                                </button>
                                                <ul class="dropdown-menu">
                                                    <li>
                                                        <button class="dropdown-item" onclick="editTimeSlot(@timeSlot.Id, '@timeSlot.StartTime', '@timeSlot.EndTime', @timeSlot.IsActive.ToString().ToLower())">
                                                            <i class="bi bi-pencil"></i> Edit
                                                        </button>
                                                    </li>
                                                    <li>
                                                        <form asp-action="DeleteTimeSlot" method="post" style="display: inline;" 
                                                              onsubmit="return confirm('Are you sure you want to delete this time slot?');">
                                                            <input type="hidden" name="id" value="@timeSlot.Id" />
                                                            <button type="submit" class="dropdown-item text-danger">
                                                                <i class="bi bi-trash"></i> Delete
                                                            </button>
                                                        </form>
                                                    </li>
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
        else
        {
            <div class="text-center text-muted py-5">
                <i class="bi bi-clock fs-1 mb-3"></i>
                <h5>No Time Slots Configured</h5>
                <p>
                    @if (ViewBag.BranchId != null)
                    {
                        <span>No non-peak hours configured for this branch. Add time slots to restrict check-ins to specific hours.</span>
                    }
                    else
                    {
                        <span>No time slots have been configured for any branch yet.</span>
                    }
                </p>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createTimeSlotModal">
                    <i class="bi bi-plus-circle"></i> Add First Time Slot
                </button>
            </div>
        }
    </div>
</div>

<!-- Create Time Slot Modal -->
<div class="modal fade" id="createTimeSlotModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="CreateTimeSlot" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Time Slot</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    @if (ViewBag.BranchId == null)
                    {
                        <div class="mb-3">
                            <label class="form-label">Branch *</label>
                            <select name="BranchId" class="form-select" required>
                                <option value="">Select Branch</option>
                                @foreach (var branch in branches)
                                {
                                    <option value="@branch.Id">@branch.Name</option>
                                }
                            </select>
                        </div>
                    }
                    else
                    {
                        <input type="hidden" name="BranchId" value="@ViewBag.BranchId" />
                    }

                    <div class="mb-3">
                        <label class="form-label">Day of Week *</label>
                        <select name="DayOfWeek" class="form-select" required>
                            @foreach (var day in daysOfWeek)
                            {
                                <option value="@((int)day)">@day</option>
                            }
                        </select>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Start Time *</label>
                                <input type="time" name="StartTime" class="form-control" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">End Time *</label>
                                <input type="time" name="EndTime" class="form-control" required>
                            </div>
                        </div>
                    </div>

                    <div class="alert alert-info">
                        <i class="bi bi-info-circle"></i>
                        <strong>Note:</strong> Time slots can cross midnight. For example, 22:00 - 04:00 means from 10 PM today to 4 AM tomorrow.
                        Minimum duration is 30 minutes.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Time Slot</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Time Slot Modal -->
<div class="modal fade" id="editTimeSlotModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="UpdateTimeSlot" method="post">
                <input type="hidden" id="editTimeSlotId" name="id">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Time Slot</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">Start Time *</label>
                                <input type="time" id="editStartTime" name="startTime" class="form-control" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label">End Time *</label>
                                <input type="time" id="editEndTime" name="endTime" class="form-control" required>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="editIsActive" name="isActive" value="true">
                            <label class="form-check-label" for="editIsActive">
                                Active
                            </label>
                        </div>
                    </div>

                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle"></i>
                        <strong>Warning:</strong> Changing time slots will affect when users can check in. 
                        Make sure the new times align with your business requirements.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Time Slot</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editTimeSlot(id, startTime, endTime, isActive) {
            document.getElementById('editTimeSlotId').value = id;
            document.getElementById('editStartTime').value = startTime;
            document.getElementById('editEndTime').value = endTime;
            document.getElementById('editIsActive').checked = isActive;

            new bootstrap.Modal(document.getElementById('editTimeSlotModal')).show();
        }

        // Validate time slots on form submission
        document.querySelector('#createTimeSlotModal form').addEventListener('submit', function(e) {
            const startTime = this.querySelector('[name="StartTime"]').value;
            const endTime = this.querySelector('[name="EndTime"]').value;
            
            if (startTime && endTime) {
                if (!validateTimeSlot(startTime, endTime)) {
                    e.preventDefault();
                    alert('Invalid time slot. Minimum duration is 30 minutes.');
                }
            }
        });

        document.querySelector('#editTimeSlotModal form').addEventListener('submit', function(e) {
            const startTime = this.querySelector('[name="startTime"]').value;
            const endTime = this.querySelector('[name="endTime"]').value;
            
            if (startTime && endTime) {
                if (!validateTimeSlot(startTime, endTime)) {
                    e.preventDefault();
                    alert('Invalid time slot. Minimum duration is 30 minutes.');
                }
            }
        });

        function validateTimeSlot(startTime, endTime) {
            const start = new Date('1970-01-01T' + startTime + ':00');
            const end = new Date('1970-01-01T' + endTime + ':00');
            
            let duration;
            if (start <= end) {
                // Normal time slot (doesn't cross midnight)
                duration = end - start;
            } else {
                // Time slot crosses midnight
                const endOfDay = new Date('1970-01-02T00:00:00');
                duration = (endOfDay - start) + (end - new Date('1970-01-01T00:00:00'));
            }
            
            // Check if duration is at least 30 minutes (30 * 60 * 1000 milliseconds)
            return duration >= 30 * 60 * 1000;
        }

        // Show helpful examples when modal is opened
        document.getElementById('createTimeSlotModal').addEventListener('shown.bs.modal', function() {
            const alert = this.querySelector('.alert-info');
            if (alert) {
                alert.innerHTML = `
                    <i class="bi bi-info-circle"></i>
                    <strong>Examples:</strong><br>
                    • Morning: 06:00 - 10:00<br>
                    • Afternoon: 14:00 - 18:00<br>
                    • Late Night: 22:00 - 04:00 (crosses midnight)<br>
                    Minimum duration is 30 minutes.
                `;
            }
        });
    </script>
}