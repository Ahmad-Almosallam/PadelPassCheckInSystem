@model EndUsersPaginatedViewModel

<div class="card">
    <div class="card-body">
        <!-- Pagination Info -->
        @if (Model.EndUsers.TotalItems > 0)
        {
            <div class="d-flex justify-content-between align-items-center mb-3">
                <div class="text-muted">
                    <small>
                        Showing @Model.EndUsers.StartIndex - @Model.EndUsers.EndIndex of @Model.EndUsers.TotalItems users
                        @if (!string.IsNullOrWhiteSpace(Model.SearchPhoneNumber))
                        {
                            <span class="badge bg-info ms-2">
                                <i class="bi bi-funnel"></i> Filtered by: @Model.SearchPhoneNumber
                            </span>
                        }
                    </small>
                </div>
                <div class="d-flex align-items-center">
                    <label class="form-label me-2 mb-0">Page size:</label>
                    <select class="form-select form-select-sm" id="page-select" style="width: auto;"
                            onchange="changePageSize(this.value)">
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select>
                </div>
            </div>
        }

        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                <tr>
                    <th>Photo</th>
                    <th>Name</th>
                    <th>Phone</th>
                    <th>Email</th>
                    <th>Subscription <small class="text-muted">(KSA Time)</small></th>
                    <th>Status</th>
                    <th>QR Code</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var user in Model.EndUsers.Items)
                {
                    var today = KSADateTimeExtensions.GetKSANow().Date;
                    var subscriptionStartKSA = user.SubscriptionStartDate.ToKSATime().Date;
                    var subscriptionEndKSA = user.SubscriptionEndDate.ToKSATime().Date;
                    var isActive = subscriptionStartKSA <= today && subscriptionEndKSA >= today;
                    var isPaused = user.IsPaused && user.CurrentPauseStartDate?.ToKSATime().Date <= today && user.CurrentPauseEndDate?.ToKSATime().Date >= today;

                    <tr class="@(isPaused ? "table-warning" : "")">
                        <td>
                            @if (!string.IsNullOrEmpty(user.ImageUrl))
                            {
                                <img src="@user.ImageUrl" alt="@user.Name" class="rounded-circle"
                                     style="width: 40px; height: 40px; object-fit: cover;">
                            }
                            else
                            {
                                <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center"
                                     style="width: 40px; height: 40px;">
                                    <i class="bi bi-person text-white"></i>
                                </div>
                            }
                        </td>
                        <td>
                            <strong>@user.Name</strong>
                            @if (isPaused)
                            {
                                <br>
                                <small class="text-warning"><i class="bi bi-pause-circle"></i> Currently Paused</small>
                            }
                        </td>
                        <td>@user.PhoneNumber</td>
                        <td>@user.Email</td>
                        <td>
                            <small>
                                <strong>Start:</strong> @user.SubscriptionStartDate.ToKSATime().ToString("MMM dd, yyyy")<br>
                                <strong>End:</strong> @user.SubscriptionEndDate.ToKSATime().ToString("MMM dd, yyyy")
                            </small>
                            @if (user.IsPaused)
                            {
                                <br>
                                <small class="text-warning">
                                    Paused until @user.CurrentPauseEndDate?.ToKSATime().ToString("MMM dd, yyyy")
                                </small>
                            }
                        </td>
                        <td>
                            @if (user.IsStopped)
                            { 
                                <span class="badge bg-danger" style="cursor: pointer; text-decoration: underline;" 
                                      onclick="showStopDetails('@user.StoppedDate?.ToKSATime().ToString("MMM dd, yyyy hh:mm tt")', '@Html.Raw(user.StopReason?.Replace("'", "\\'"))')"
                                      title="Click to view stop details">
                                    <i class="bi bi-info-circle me-1"></i>Stopped
                                </span> 
                            }
                            else if (isPaused)
                            {
                                <span class="badge bg-warning">Paused</span>
                            }
                            else if (isActive)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Inactive</span>
                            }
                        </td>
                        <td>
                            <button class="btn btn-sm btn-info" onclick="generateQRCode(@user.Id)">
                                <i class="bi bi-qr-code"></i> Generate
                            </button>
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-sm btn-outline-secondary dropdown-toggle"
                                        data-bs-toggle="dropdown">
                                    <i class="bi bi-gear"></i> Actions
                                </button>
                                <ul class="dropdown-menu">
                                    <li>
                                        <button class="dropdown-item"
                                                onclick="editUser(@user.Id, '@user.Name', '@user.PhoneNumber', '@user.Email', '@user.ImageUrl', '@user.SubscriptionStartDate.ToKSATime().ToString("yyyy-MM-dd")', '@user.SubscriptionEndDate.ToKSATime().ToString("yyyy-MM-dd")')">
                                            <i class="bi bi-pencil"></i> Edit Details
                                        </button>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    @if (user.IsPaused)
                                    {
                                        <li>
                                            <form asp-action="UnpauseSubscription" asp-controller="PauseSubscription" method="post" style="display: inline;"
                                                  onsubmit="return confirm('Are you sure you want to unpause this subscription?');">
                                                <input type="hidden" name="endUserId" value="@user.Id"/>
                                                <button type="submit" class="dropdown-item text-success">
                                                    <i class="bi bi-play-circle"></i> Unpause Subscription
                                                </button>
                                            </form>
                                        </li>
                                    }
                                    else
                                    {
                                        <li>
                                            <a class="dropdown-item text-warning"
                                               href="@Url.Action("PauseSubscription", "PauseSubscription", new { endUserId = user.Id })">
                                                <i class="bi bi-pause-circle"></i> Pause Subscription
                                            </a>
                                        </li>
                                    }
                                    <li>
                                        <a class="dropdown-item"
                                           href="@Url.Action("PauseHistory", "PauseSubscription", new { endUserId = user.Id })">
                                            <i class="bi bi-clock-history"></i> View Pause History
                                        </a>
                                    </li>
                                    <li><hr class="dropdown-divider"></li>
                                    @if (user.IsStopped)
                                    {
                                        <li>
                                            <form asp-action="ReactivateSubscription" method="post" style="display: inline;"
                                                  onsubmit="return confirm('Are you sure you want to reactivate this subscription?');">
                                                <input type="hidden" name="endUserId" value="@user.Id"/>
                                                <button type="submit" class="dropdown-item text-success">
                                                    <i class="bi bi-play-fill"></i> Reactivate Subscription
                                                </button>
                                            </form>
                                        </li>
                                    }
                                    else
                                    {
                                        <li>
                                            <button class="dropdown-item text-danger"
                                                    onclick="showStopSubscriptionModal(@user.Id, '@user.Name', '@user.PhoneNumber')">
                                                <i class="bi bi-stop-circle"></i> Stop Subscription
                                            </button>
                                        </li>
                                    }
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form asp-action="DeleteEndUser" method="post" style="display: inline;"
                                              onsubmit="return confirm('Are you sure you want to delete this user? This action cannot be undone.');">
                                            <input type="hidden" name="id" value="@user.Id"/>
                                            <button type="submit" class="dropdown-item text-danger">
                                                <i class="bi bi-trash"></i> Delete User
                                            </button>
                                        </form>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

        @if (!Model.EndUsers.Items.Any())
        {
            <div class="text-center text-muted py-5">
                <i class="bi bi-people fs-1 mb-3"></i>
                @if (!string.IsNullOrWhiteSpace(Model.SearchPhoneNumber))
                {
                    <h5>No Users Found</h5>
                    <p>No users found matching phone number "@Model.SearchPhoneNumber".</p>
                    <button type="button" class="btn btn-primary" onclick="resetSearch()">
                        <i class="bi bi-arrow-left"></i> Show All Users
                    </button>
                }
                else
                {
                    <h5>No End Users Found</h5>
                    <p>No end users have been created yet.</p>
                    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">
                        <i class="bi bi-plus-circle"></i> Add First End User
                    </button>
                }
            </div>
        }

        <!-- Include Pagination Partial -->
        @await Html.PartialAsync("~/Views/Admin/_EndUsersPagination.cshtml", Model)

        @if (Model.EndUsers.Items.Any())
        {
            <div class="mt-3 text-muted">
                <small>
                    <i class="bi bi-info-circle"></i>
                    Showing @Model.EndUsers.StartIndex - @Model.EndUsers.EndIndex of @Model.EndUsers.TotalItems user(s).
                    All dates displayed in KSA Time (UTC+3).
                </small>
            </div>
        }
    </div>
</div>
