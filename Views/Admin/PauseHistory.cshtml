@model List<PadelPassCheckInSystem.Models.ViewModels.PadelPassCheckInSystem.Models.ViewModels.SubscriptionPauseHistoryViewModel>
@{
    ViewData["Title"] = ViewBag.EndUserId.HasValue ? $"Pause History - {ViewBag.EndUserName}" : "All Pause History";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>
        @if (ViewBag.EndUserId.HasValue)
        {
            <span>Pause History - @ViewBag.EndUserName</span>
        }
        else
        {
            <span>All Subscription Pause History</span>
        }
    </h1>

    @if (ViewBag.EndUserId.HasValue)
    {
        <a href="@Url.Action("EndUsers")" class="btn btn-outline-primary">
            <i class="bi bi-arrow-left"></i> Back to End Users
        </a>
    }
    else
    {
        <a href="@Url.Action("EndUsers")" class="btn btn-outline-primary">
            <i class="bi bi-people"></i> Manage End Users
        </a>
    }
</div>

@if (!ViewBag.EndUserId.HasValue)
{
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-8">
                    <label class="form-label">Filter by End User</label>
                    <select name="endUserId" class="form-select" onchange="this.form.submit()">
                        <option value="">All Users</option>
                        @{
                            var endUsers = ViewContext.HttpContext.RequestServices
                                .GetRequiredService<PadelPassCheckInSystem.Data.ApplicationDbContext>()
                                .EndUsers.OrderBy(u => u.Name)
                                .ToList();
                        }
                        @foreach (var user in endUsers)
                        {
                            <option value="@user.Id" selected="@(ViewBag.EndUserId == user.Id ? "selected" : null)">
                                @user.Name (@user.PhoneNumber)
                            </option>
                        }
                    </select>
                </div>
            </form>
        </div>
    </div>
}

<div class="card">
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                    <tr>
                        @if (!ViewBag.EndUserId.HasValue)
                        {
                            <th>End User</th>
                        }
                        <th>Pause Period</th>
                        <th>Duration</th>
                        <th>Reason</th>
                        <th>Created By</th>
                        <th>Created Date</th>
                        <th>Status</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var pause in Model)
                    {
                        <tr class="@(pause.IsActive ? "table-warning" : "")">
                            @if (!ViewBag.EndUserId.HasValue)
                            {
                                <td>
                                    <strong>@pause.EndUserName</strong>
                                </td>
                            }
                            <td>
                                <div>
                                    <strong>Start:</strong> @pause.PauseStartDate.ToString("MMM dd, yyyy")<br>
                                    <strong>End:</strong> @pause.PauseEndDate.ToString("MMM dd, yyyy")
                                </div>
                            </td>
                            <td>
                                <span class="badge bg-info">@pause.PauseDays days</span>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(pause.Reason))
                                {
                                    <span class="text-muted">@pause.Reason</span>
                                }
                                else
                                {
                                    <span class="text-muted fst-italic">No reason provided</span>
                                }
                            </td>
                            <td>@pause.CreatedByUserName</td>
                            <td>
                                <small>@pause.CreatedAt.ToString("MMM dd, yyyy HH:mm")</small>
                            </td>
                            <td>
                                @if (pause.IsActive)
                                {
                                    var today = DateTime.UtcNow.Date;
                                    if (today >= pause.PauseStartDate.Date && today <= pause.PauseEndDate.Date)
                                    {
                                        <span class="badge bg-warning">Currently Paused</span>
                                    }
                                    else if (today < pause.PauseStartDate.Date)
                                    {
                                        <span class="badge bg-info">Scheduled</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Should be Completed</span>
                                    }
                                }
                                else
                                {
                                    <span class="badge bg-success">Completed</span>
                                }
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center text-muted py-5">
                <i class="bi bi-clock-history fs-1 mb-3"></i>
                <h5>No Pause History</h5>
                <p>
                    @if (ViewBag.EndUserId.HasValue)
                    {
                        <span>This user has no subscription pause history.</span>
                    }
                    else
                    {
                        <span>No subscription pauses have been recorded yet.</span>
                    }
                </p>
            </div>
        }
    </div>
</div>

@if (Model.Any())
{
    <div class="mt-4">
        <div class="row">
            <div class="col-md-4">
                <div class="card bg-light">
                    <div class="card-body text-center">
                        <h5 class="card-title">Total Pauses</h5>
                        <h2 class="text-primary">@Model.Count</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card bg-light">
                    <div class="card-body text-center">
                        <h5 class="card-title">Total Days Paused</h5>
                        <h2 class="text-warning">@Model.Sum(p => p.PauseDays)</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card bg-light">
                    <div class="card-body text-center">
                        <h5 class="card-title">Currently Active</h5>
                        <h2 class="text-success">@Model.Count(p => p.IsActive)</h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
}