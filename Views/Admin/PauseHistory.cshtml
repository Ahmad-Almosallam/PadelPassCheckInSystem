@model List<PadelPassCheckInSystem.Models.ViewModels.PadelPassCheckInSystem.Models.ViewModels.SubscriptionPauseHistoryViewModel>
@{
ViewData["Title"] = ViewBag.EndUserId != null ? $"Pause History - {ViewBag.EndUserName}" : "All Pause History";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1>
        @if (ViewBag.EndUserId != null)
        {
        <span>Pause History - @ViewBag.EndUserName</span>
        }
        else
        {
        <span>All Subscription Pause History</span>
        }
    </h1>

    <div class="d-flex align-items-center gap-3">
        <div class="text-muted">
            <small>
                <i class="bi bi-clock"></i> @KSADateTimeExtensions.GetKSANow().ToString("yyyy-MM-dd HH:mm:ss") KSA
            </small>
        </div>
        @if (ViewBag.EndUserId != null)
        {
        <a href="@Url.Action("EndUsers", "EndUser")" class="btn btn-outline-primary">
            <i class="bi bi-arrow-left"></i> Back to End Users
        </a>
        }
        else
        {
        <a href="@Url.Action("EndUsers", "EndUser")" class="btn btn-outline-primary">
            <i class="bi bi-people"></i> Manage End Users
        </a>
        }
    </div>
</div>

@if (ViewBag.EndUserId == null)
{
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="row g-3">
            <div class="col-md-8">
                <label class="form-label">Filter by End User</label>
                <select name="endUserId" class="form-select" onchange="this.form.submit()">
                    <option value="">All Users</option>
                    @{
                    var endUsers = ViewContext.HttpContext.RequestServices
                    .GetRequiredService<PadelPassCheckInSystem.Data.ApplicationDbContext>()
                    .EndUsers.OrderBy(u => u.Name)
                    .ToList();
                    }
                    @foreach (var user in endUsers)
                    {
                    <option value="@user.Id" selected="@(ViewBag.EndUserId == user.Id ? "selected" : null)">
                        @user.Name (@user.PhoneNumber)
                    </option>
                    }
                </select>
            </div>
        </form>
    </div>
</div>
}

<div class="card">
    <div class="card-body">
        @if (Model.Any())
        {
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                <tr>
                    @if (ViewBag.EndUserId == null)
                    {
                    <th>End User</th>
                    }
                    <th>Pause Period <small class="text-muted">(KSA)</small></th>
                    <th>Duration</th>
                    <th>Reason</th>
                    <th>Created By</th>
                    <th>Created Date <small class="text-muted">(KSA)</small></th>
                    <th>Status</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var pause in Model)
                {
                <tr class="@(pause.IsActive ? "table-warning" : "")">
                    @if (ViewBag.EndUserId == null)
                    {
                    <td>
                        <strong>@pause.EndUserName</strong>
                    </td>
                    }
                    <td>
                        <div>
                            <strong>Start:</strong> @pause.PauseStartDate.ToKSATime().ToString("MMM dd, yyyy")<br>
                            <strong>End:</strong> @pause.PauseEndDate.ToKSATime().ToString("MMM dd, yyyy")
                        </div>
                    </td>
                    <td>
                        <span class="badge bg-info">@pause.PauseDays days</span>
                    </td>
                    <td>
                        @if (!string.IsNullOrEmpty(pause.Reason))
                        {
                        <span class="text-muted">@pause.Reason</span>
                        }
                        else
                        {
                        <span class="text-muted fst-italic">No reason provided</span>
                        }
                    </td>
                    <td>@pause.CreatedByUserName</td>
                    <td>
                        <small>@pause.CreatedAt.ToKSATime().ToString("MMM dd, yyyy HH:mm")</small>
                    </td>
                    <td>
                        @{
                        var today = KSADateTimeExtensions.GetKSANow().Date;
                        var pauseStartKSA = pause.PauseStartDate.ToKSATime().Date;
                        var pauseEndKSA = pause.PauseEndDate.ToKSATime().Date;
                        }
                        @if (pause.IsActive)
                        {
                        if (today >= pauseStartKSA && today <= pauseEndKSA)
                        {
                        <span class="badge bg-warning">Currently Paused</span>
                        }
                        else if (today < pauseStartKSA)
                        {
                        <span class="badge bg-info">Scheduled</span>
                        }
                        else
                        {
                        <span class="badge bg-secondary">Should be Completed</span>
                        }
                        }
                        else
                        {
                        <span class="badge bg-success">Completed</span>
                        }
                    </td>
                </tr>
                }
                </tbody>
            </table>
        </div>

        <div class="mt-3 text-muted">
            <small>
                <i class="bi bi-info-circle"></i>
                All dates and times are displayed in KSA Time (UTC+3).
            </small>
        </div>
        }
        else
        {
        <div class="text-center text-muted py-5">
            <i class="bi bi-clock-history fs-1 mb-3"></i>
            <h5>No Pause History</h5>
            <p>
                @if (ViewBag.EndUserId != null)
                {
                <span>This user has no subscription pause history.</span>
                }
                else
                {
                <span>No subscription pauses have been recorded yet.</span>
                }
            </p>
        </div>
        }
    </div>
</div>

@if (Model.Any())
{
<div class="mt-4">
    <div class="row">
        <div class="col-md-4">
            <div class="card bg-light">
                <div class="card-body text-center">
                    <h5 class="card-title">Total Pauses</h5>
                    <h2 class="text-primary">@Model.Count</h2>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-light">
                <div class="card-body text-center">
                    <h5 class="card-title">Total Days Paused</h5>
                    <h2 class="text-warning">@Model.Sum(p => p.PauseDays)</h2>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-light">
                <div class="card-body text-center">
                    <h5 class="card-title">Currently Active</h5>
                    <h2 class="text-success">@Model.Count(p => p.IsActive)</h2>
                </div>
            </div>
        </div>
    </div>
</div>
}