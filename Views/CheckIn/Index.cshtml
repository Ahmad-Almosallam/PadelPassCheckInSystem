@model List<PadelPassCheckInSystem.Models.Entities.CheckIn>
@{
    ViewData["Title"] = "Check-In";
}

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">
                    <i class="bi bi-building"></i> @ViewBag.BranchName - Check-In Portal
                </h4>
            </div>
            <div class="card-body">
                <div class="text-center mb-4">
                    <h5>Today's Check-Ins: <span class="badge bg-success">@ViewBag.TodayCount</span></h5>
                </div>

                <div class="check-in-form">
                    <div class="input-group input-group-lg mb-3">
                        <span class="input-group-text">
                            <i class="bi bi-qr-code-scan"></i>
                        </span>
                        <input type="text" id="identifierInput" class="form-control" 
                               placeholder="Scan QR Code or Enter Phone Number" autofocus>
                        <button class="btn btn-primary" type="button" onclick="processCheckIn()">
                            <i class="bi bi-check-circle"></i> Check In
                        </button>
                    </div>
                </div>

                <div id="resultMessage" class="alert d-none" role="alert"></div>

                <!-- Success Animation -->
                <div id="successAnimation" class="text-center d-none">
                    <div class="success-checkmark">
                        <i class="bi bi-check-circle-fill text-success" style="font-size: 100px;"></i>
                    </div>
                    <h3 class="mt-3 text-success">Check-In Successful!</h3>
                    <div id="userInfo" class="mt-3"></div>
                </div>
            </div>
        </div>

        <!-- Recent Check-Ins -->
        <div class="card mt-4">
            <div class="card-header">
                <h5 class="mb-0">Recent Check-Ins</h5>
            </div>
            <div class="card-body">
                <div id="recentCheckInsList">
                    @if (Model.Any())
                    {
                        <div class="list-group">
                            @foreach (var checkIn in Model.Take(5))
                            {
                                <div class="list-group-item">
                                    <div class="d-flex align-items-center">
                                        @if (!string.IsNullOrEmpty(checkIn.EndUser.ImageUrl))
                                        {
                                            <img src="@checkIn.EndUser.ImageUrl" alt="@checkIn.EndUser.Name" 
                                                 class="rounded-circle me-3" style="width: 50px; height: 50px; object-fit: cover;">
                                        }
                                        else
                                        {
                                            <div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center me-3" 
                                                 style="width: 50px; height: 50px;">
                                                <i class="bi bi-person text-white"></i>
                                            </div>
                                        }
                                        <div>
                                            <h6 class="mb-0">@checkIn.EndUser.Name</h6>
                                            <small class="text-muted">@checkIn.CheckInDateTime.ToLocalTime().ToString("HH:mm:ss")</small>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted text-center">No check-ins today</p>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Instructions</h5>
            </div>
            <div class="card-body">
                <ol>
                    <li class="mb-2">Ask the customer for their QR code or phone number</li>
                    <li class="mb-2">Scan the QR code using the phone camera or enter the phone number</li>
                    <li class="mb-2">Press Enter or click "Check In"</li>
                    <li class="mb-2">Verify the customer's name and photo</li>
                </ol>
                
                <hr>
                
                <h6>Keyboard Shortcuts:</h6>
                <ul class="list-unstyled">
                    <li><kbd>Enter</kbd> - Process check-in</li>
                    <li><kbd>Esc</kbd> - Clear input</li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        #identifierInput {
            font-size: 1.2rem;
            text-align: center;
        }
        
        .success-checkmark {
            animation: scale-in 0.5s ease-in-out;
        }
        
        @@keyframes scale-in {
            0% { transform: scale(0); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }
        
        .list-group-item {
            transition: background-color 0.3s;
        }
        
        .list-group-item:hover {
            background-color: #f8f9fa;
        }
    </style>
}

@section Scripts {
    <script>
        let isProcessing = false;

        document.getElementById('identifierInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                processCheckIn();
            }
        });

        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                clearInput();
            }
        });

        function processCheckIn() {
            if (isProcessing) return;
            
            const identifier = document.getElementById('identifierInput').value.trim();
            if (!identifier) {
                showMessage('Please enter a phone number or scan a QR code.', 'warning');
                return;
            }

            isProcessing = true;
            const button = document.querySelector('.btn-primary');
            button.disabled = true;
            button.innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Processing...';

            fetch('/CheckIn/ProcessCheckIn', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ identifier: identifier })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showSuccessAnimation(data);
                    clearInput();
                    updateRecentCheckIns();
                } else {
                    showMessage(data.message, 'danger');
                }
            })
            .finally(() => {
                isProcessing = false;
                button.disabled = false;
                button.innerHTML = '<i class="bi bi-check-circle"></i> Check In';
            });
        }

        function showMessage(message, type) {
            const resultDiv = document.getElementById('resultMessage');
            resultDiv.className = `alert alert-${type} alert-dismissible fade show`;
            resultDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            resultDiv.classList.remove('d-none');
            
            setTimeout(() => {
                resultDiv.classList.add('d-none');
            }, 5000);
        }

        function showSuccessAnimation(data) {
            const successDiv = document.getElementById('successAnimation');
            const userInfoDiv = document.getElementById('userInfo');
            
            let userHtml = `<h4>${data.userName}</h4>`;
            if (data.userImage) {
                userHtml = `
                    <img src="${data.userImage}" alt="${data.userName}" 
                         class="rounded-circle mb-3" style="width: 150px; height: 150px; object-fit: cover;">
                    <h4>${data.userName}</h4>
                `;
            }
            
            userInfoDiv.innerHTML = userHtml;
            successDiv.classList.remove('d-none');
            
            // Play success sound if available
            const audio = new Audio('/sounds/success.mp3');
            audio.play().catch(() => {});
            
            setTimeout(() => {
                successDiv.classList.add('d-none');
            }, 3000);
        }

        function clearInput() {
            document.getElementById('identifierInput').value = '';
            document.getElementById('identifierInput').focus();
        }

        function updateRecentCheckIns() {
            fetch('/CheckIn/GetRecentCheckIns')
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const listDiv = document.getElementById('recentCheckInsList');
                        if (data.checkIns.length > 0) {
                            let html = '<div class="list-group">';
                            data.checkIns.forEach(checkIn => {
                                const imageHtml = checkIn.image 
                                    ? `<img src="${checkIn.image}" alt="${checkIn.name}" class="rounded-circle me-3" style="width: 50px; height: 50px; object-fit: cover;">`
                                    : `<div class="bg-secondary rounded-circle d-flex align-items-center justify-content-center me-3" style="width: 50px; height: 50px;"><i class="bi bi-person text-white"></i></div>`;
                                
                                html += `
                                    <div class="list-group-item">
                                        <div class="d-flex align-items-center">
                                            ${imageHtml}
                                            <div>
                                                <h6 class="mb-0">${checkIn.name}</h6>
                                                <small class="text-muted">${checkIn.time}</small>
                                            </div>
                                        </div>
                                    </div>
                                `;
                            });
                            html += '</div>';
                            listDiv.innerHTML = html;
                        }
                    }
                });
        }

        // Auto-refresh recent check-ins every 30 seconds
        setInterval(updateRecentCheckIns, 30000);
    </script>
}